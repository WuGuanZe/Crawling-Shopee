# -*- coding: utf-8 -*-
"""Crawling Shopee.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vgBJSSl-adj4YWWWG-vSkwmaZivcfTp6
"""

# 載入必要套件
import requests
from bs4 import BeautifulSoup
import json
import pandas as pd
import time
from tqdm import tqdm
import time
import re
import random

# 首先設定關鍵字
keyword = '精品咖啡'
page = 1

# 封包標頭檔
my_headers = {'authority' : 'shopee.tw',
     'method': 'GET',
     'path': '/api/v1/item_detail/?item_id=1147052312&shop_id=17400098',
     'scheme': 'https',
     'accept': '*/*',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6',
     'cookie': '_ga=GA1.2.1087113924.1519696808; SPC_IA=-1; SPC_F=SDsFai6wYMRFvHCNzyBRCvFIp92UnuU3; REC_T_ID=f2be85da-1b61-11e8-a60b-d09466041854; __BWfp=c1519696822183x3c2b15d09; __utmz=88845529.1521362936.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _atrk_siteuid=HEgUlHUKcEXQZWpB; SPC_EC=-; SPC_U=-; SPC_T_ID="vBBUETICFqj4EWefxIdZzfzutfKhrgytH2wyevGxiObL3hFEfy0dpQSOM/yFzaGYQLUANrPe7QZ4hqLZotPs72MhLd8aK0qhIwD5fqDrlRs="; SPC_T_IV="IpxA2sGrOUQhMH4IaolDSA=="; cto_lwid=2fc9d64c-3cfd-4cf9-9de7-a1516b03ed79; csrftoken=EDL9jQV76T97qmB7PaTPorKtfMlU7eUO; bannerShown=true; _gac_UA-61915057-6=1.1529645767.EAIaIQobChMIwvrkw8bm2wIVkBiPCh2bZAZgEAAYASAAEgIglPD_BwE; _gid=GA1.2.1275115921.1529896103; SPC_SI=2flgu0yh38oo0v2xyzns9a2sk6rz9ou8; __utma=88845529.1087113924.1519696808.1528465088.1529902919.7; __utmc=88845529; appier_utmz=%7B%22csr%22%3A%22(direct)%22%2C%22timestamp%22%3A1529902919%7D; _atrk_sync_cookie=true; _gat=1',
     'if-none-match': "55b03-9ff4fb127aff56426f5ec9022baec594",
     'referer': 'https://shopee.tw/6-9-%F0%9F%87%B0%F0%9F%87%B7%E9%9F%93%E5%9C%8B%E9%80%A3%E7%B7%9A-omg!%E6%96%B0%E8%89%B2%E7%99%BB%E5%A0%B4%F0%9F%94%A5%E4%BA%A4%E5%8F%89%E7%BE%8E%E8%83%8CBra%E5%BD%88%E5%8A%9B%E8%83%8C%E5%BF%83-i.17400098.1147052312',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'x-api-source': 'pc',
     'x-requested-with': 'XMLHttpRequest'
      }

"""爬取頁面：讀者可以直接前往本網址 https://shopee.tw/search?keyword=咖啡&page=1 ，爬得就是本頁的商品id與店家id"""

# 專門用來請求蝦皮的相關商品基本資料
def request_shopee(keyword, page):
    url = 'https://shopee.tw/api/v2/search_items/?by=relevancy&keyword=' + keyword + '&limit=100&newest=' + str(page*100) + '&order=desc&page_type=search&version=2'
    #開始請求
    list_req = requests.get(url,headers = my_headers)
    soup = BeautifulSoup(list_req.content, "html.parser")
    #將扒下來的文字轉成Json
    getjson=json.loads(soup.text)
    
    return getjson['items']

"""## **首先設定關鍵字**

keyword = '運動內衣'

page = 0 --> 代表第一頁的意思，會直接爬100項資料

"""

# 使用方法
items_json = request_shopee(keyword = '精品咖啡', page = 0)

# 轉換成data frame
items=pd.DataFrame(items_json)

items

# 提取出後續要進入每個商品，抓取賣家更細節資料（商品文案、SKU）的欄位
items2 = items[['itemid','shopid','name', 'price']]

items2

"""## **抓取賣家細節的資料**

有了上述頁面商家的基本資料（商品ID與商品賣家ID），就可以開始深入每一個商品網頁，抓取欲求資料

在這裡會使用到的goods_detail() 中有兩個必要的參數，分別是

*   item_id（商品ID）
*   shop_id（商品賣家ID） 都是從request_shopee()的function中取得
"""

# 進入每個商品，抓取賣家更細節的資料（商品文案、SKU）
def goods_detail(item_id, shop_id):
    url = 'https://shopee.tw/api/v2/item/get?itemid=' + str(item_id) + '&shopid=' + str(shop_id)
    r = requests.get(url,headers = my_headers)
    st= r.text.replace("\\n","^n")
    st=st.replace("\\t","^t")
    st=st.replace("\\r","^r")
    
    gj=json.loads(st)
    return gj

# 一個一個產品進去抓，但是讓我們先抓第50個來試試看
product=goods_detail(item_id = items['itemid'].tolist()[49], shop_id = items['shopid'].tolist()[49])['item']

# 將重要的SKU、articles與tags抓取出來
articles = []
SKU = []
tags = []
articles.append(product['description'])
SKU.append(product['models'])
tags.append(product['hashtag_list'])

product = pd.DataFrame({'articles':articles, 'SKU':SKU, 'tags':tags})

# 查看product裏面的樣子
product

# 抓出第一個SKU的樣子～
product['SKU'][0][0]

"""## **爬取消費者資料**
本處使用goods_comments() 來爬取消費者資料，將買家的重要資料給爬取下來，每一列代表一位消費者，其中包含留言內容、商品規格等。
"""

# 進入每個商品，抓取買家留言
def goods_comments(item_id, shop_id):
    url = 'https://shopee.tw/api/v1/comment_list/?item_id='+ str(item_id) + '&shop_id=' + str(shop_id) + '&offset=0&limit=200&flag=1&filter=0'
    r = requests.get(url,headers = my_headers)
    st= r.text.replace("\\n","^n")
    st=st.replace("\\t","^t")
    st=st.replace("\\r","^r")
    
    gj=json.loads(st)
    return gj['comments']

iteComment = goods_comments(item_id = items['itemid'].tolist()[1], shop_id = items['shopid'].tolist()[1])

userinfo = pd.DataFrame(iteComment)

# 找到消費者留言不同的資料！
userinfo

userinfo.columns

